#!/usr/local/bin/mathematica -script

(* ::Package:: *)

(* ::Title:: *)
(*LZW Compression*)

(* ::Section:: *)
(*Parameters*)

(* ::Text:: *)
(* Add paths to statistics files output from `lzw` with `-s` to the statsFiles list. Once this is done, evaluate initialization cells to load the data and generate a basic set of plots, including the evolution of aggregate compression ratio and dictionary size. Alternatively, evaluate all cells to generate a full set of plots, including the above as well as per-symbol compression ratio and distribution of dictionary entry sizes. This second option may be extremely computationally intensive for statistics from large files (> ~256kB uncompressed) if sampling after every symbol is output, and may not be meaningful if run on data generated by sampling at intervals. *)


statsFiles = FileNames["*.st"];
CRSmoothing = 1024;


(* ::Section:: *)
(*Data Loading + Processing*)

data = Parallelize[Import /@ statsFiles];


Smooth[list_, r_] := MovingAverage[Join[Table[list[[1]],r-1],list],r]


steps      = Parallelize[#[[All, 1]] & /@ data];
insize     = Parallelize[#[[All, 2]] & /@ data];
outsize    = Parallelize[#[[All, 3]] & /@ data];
insizeAg   = Parallelize[#[[All, 4]] & /@ data];
outsizeAg  = Parallelize[#[[All, 5]] & /@ data];
dictsize   = Parallelize[#[[All, 6]] & /@ data];
newentries = Parallelize[#[[All, 7]] & /@ data];
CRAgs      = Parallelize[MapThread[(#1/#2) &, {insizeAg, outsizeAg}]];


CRs        = Parallelize[MapThread[(#1/#2) &, {insize, outsize}]];
CRsSmooth = Parallelize[Smooth[#, CRSmoothing] & /@ CRs];


dictEntryLengths = Parallelize[Select[# != 0 &] /@ newentries];


(* ::Section:: *)
(*Data Analysis*)

(* ::Subsection:: *)
(*Compression Ratio*)
Show[
     Plot[Evaluate[y = 1], {x, 0, Max[insizeAg]},
          PlotStyle -> {Black}, PlotLegends -> {"Input File"}],
     ListLinePlot[Parallelize[MapThread[Transpose[{#1, #2}] &, {insizeAg, CRsSmooth}]],
                  PlotLegends -> SwatchLegend[statsFiles]],
     PlotRange -> {{0, Max[insizeAg]}, {0, Max[CRsSmooth]}},
     AxesLabel -> {"Position in file (bits)", "Compression Ratio"},
     LabelStyle -> {12,GrayLevel[0]},
     ImageSize -> Large
]


(* ::Subsection:: *)
(*Aggregate Compression Ratio*)
Show[
  Plot[Evaluate[y = 1], {x, 0, Max[insizeAg]}, PlotStyle -> {Black}, PlotLegends -> {"Input File"}],
  ListLinePlot[Parallelize[MapThread[Transpose[{#1, #2}] &, {insizeAg, CRAgs}]],
               PlotLegends -> SwatchLegend[statsFiles]],
  PlotRange -> {{0, Max[insizeAg]}, {0, Max[CRAgs]}},
  AxesLabel -> {"Position in file (bits)", "Compression Ratio"},
  LabelStyle->{12,GrayLevel[0]},
  ImageSize -> Large
]


(* ::Subsection:: *)
(*Dictionary Entry Length*)
GraphicsGrid[
  Partition[
    MapThread[
      Histogram[#1/8, PlotLabel -> #2,
                LabelStyle -> {12,GrayLevel[0]},
                PlotRange->{{0, Max[dictEntryLengths/8]}, {0, Length[#1]/2.8}}]&,
      {dictEntryLengths, statsFiles}],
    2],
  ImageSize -> Large]
